//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18051
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This code was auto-generated by Microsoft.Silverlight.ServiceReference, version 5.0.61118.0
// 
namespace SilverlightNavigDemo.UserService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="UserService.IUserService")]
    public interface IUserService {
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IUserService/GetUserDetails", ReplyAction="http://tempuri.org/IUserService/GetUserDetailsResponse")]
        System.IAsyncResult BeginGetUserDetails(SilverlightNavigDemo.Service.Client.Dto.PersonDto person, System.AsyncCallback callback, object asyncState);
        
        SilverlightNavigDemo.Service.Client.Dto.PersonDto EndGetUserDetails(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IUserServiceChannel : SilverlightNavigDemo.UserService.IUserService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetUserDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetUserDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public SilverlightNavigDemo.Service.Client.Dto.PersonDto Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((SilverlightNavigDemo.Service.Client.Dto.PersonDto)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class UserServiceClient : System.ServiceModel.ClientBase<SilverlightNavigDemo.UserService.IUserService>, SilverlightNavigDemo.UserService.IUserService {
        
        private BeginOperationDelegate onBeginGetUserDetailsDelegate;
        
        private EndOperationDelegate onEndGetUserDetailsDelegate;
        
        private System.Threading.SendOrPostCallback onGetUserDetailsCompletedDelegate;
        
        private BeginOperationDelegate onBeginOpenDelegate;
        
        private EndOperationDelegate onEndOpenDelegate;
        
        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseDelegate;
        
        private EndOperationDelegate onEndCloseDelegate;
        
        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
        
        public UserServiceClient() {
        }
        
        public UserServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public UserServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public UserServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public UserServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Net.CookieContainer CookieContainer {
            get {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    return httpCookieContainerManager.CookieContainer;
                }
                else {
                    return null;
                }
            }
            set {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    httpCookieContainerManager.CookieContainer = value;
                }
                else {
                    throw new System.InvalidOperationException("Unable to set the CookieContainer. Please make sure the binding contains an HttpC" +
                            "ookieContainerBindingElement.");
                }
            }
        }
        
        public event System.EventHandler<GetUserDetailsCompletedEventArgs> GetUserDetailsCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SilverlightNavigDemo.UserService.IUserService.BeginGetUserDetails(SilverlightNavigDemo.Service.Client.Dto.PersonDto person, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetUserDetails(person, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        SilverlightNavigDemo.Service.Client.Dto.PersonDto SilverlightNavigDemo.UserService.IUserService.EndGetUserDetails(System.IAsyncResult result) {
            return base.Channel.EndGetUserDetails(result);
        }
        
        private System.IAsyncResult OnBeginGetUserDetails(object[] inValues, System.AsyncCallback callback, object asyncState) {
            SilverlightNavigDemo.Service.Client.Dto.PersonDto person = ((SilverlightNavigDemo.Service.Client.Dto.PersonDto)(inValues[0]));
            return ((SilverlightNavigDemo.UserService.IUserService)(this)).BeginGetUserDetails(person, callback, asyncState);
        }
        
        private object[] OnEndGetUserDetails(System.IAsyncResult result) {
            SilverlightNavigDemo.Service.Client.Dto.PersonDto retVal = ((SilverlightNavigDemo.UserService.IUserService)(this)).EndGetUserDetails(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetUserDetailsCompleted(object state) {
            if ((this.GetUserDetailsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetUserDetailsCompleted(this, new GetUserDetailsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetUserDetailsAsync(SilverlightNavigDemo.Service.Client.Dto.PersonDto person) {
            this.GetUserDetailsAsync(person, null);
        }
        
        public void GetUserDetailsAsync(SilverlightNavigDemo.Service.Client.Dto.PersonDto person, object userState) {
            if ((this.onBeginGetUserDetailsDelegate == null)) {
                this.onBeginGetUserDetailsDelegate = new BeginOperationDelegate(this.OnBeginGetUserDetails);
            }
            if ((this.onEndGetUserDetailsDelegate == null)) {
                this.onEndGetUserDetailsDelegate = new EndOperationDelegate(this.OnEndGetUserDetails);
            }
            if ((this.onGetUserDetailsCompletedDelegate == null)) {
                this.onGetUserDetailsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetUserDetailsCompleted);
            }
            base.InvokeAsync(this.onBeginGetUserDetailsDelegate, new object[] {
                        person}, this.onEndGetUserDetailsDelegate, this.onGetUserDetailsCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }
        
        private object[] OnEndOpen(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }
        
        private void OnOpenCompleted(object state) {
            if ((this.OpenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpenAsync() {
            this.OpenAsync(null);
        }
        
        public void OpenAsync(object userState) {
            if ((this.onBeginOpenDelegate == null)) {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null)) {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null)) {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }
        
        private object[] OnEndClose(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }
        
        private void OnCloseCompleted(object state) {
            if ((this.CloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseAsync() {
            this.CloseAsync(null);
        }
        
        public void CloseAsync(object userState) {
            if ((this.onBeginCloseDelegate == null)) {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null)) {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null)) {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }
        
        protected override SilverlightNavigDemo.UserService.IUserService CreateChannel() {
            return new UserServiceClientChannel(this);
        }
        
        private class UserServiceClientChannel : ChannelBase<SilverlightNavigDemo.UserService.IUserService>, SilverlightNavigDemo.UserService.IUserService {
            
            public UserServiceClientChannel(System.ServiceModel.ClientBase<SilverlightNavigDemo.UserService.IUserService> client) : 
                    base(client) {
            }
            
            public System.IAsyncResult BeginGetUserDetails(SilverlightNavigDemo.Service.Client.Dto.PersonDto person, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = person;
                System.IAsyncResult _result = base.BeginInvoke("GetUserDetails", _args, callback, asyncState);
                return _result;
            }
            
            public SilverlightNavigDemo.Service.Client.Dto.PersonDto EndGetUserDetails(System.IAsyncResult result) {
                object[] _args = new object[0];
                SilverlightNavigDemo.Service.Client.Dto.PersonDto _result = ((SilverlightNavigDemo.Service.Client.Dto.PersonDto)(base.EndInvoke("GetUserDetails", _args, result)));
                return _result;
            }
        }
    }
}
